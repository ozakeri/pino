package com.gap.bis_inspection.db.objectmodel;

import com.gap.bis_inspection.db.dao.DaoSession;
import com.gap.bis_inspection.db.dao.SurveyFormDao;
import com.gap.bis_inspection.db.dao.SurveyFormQuestionDao;
import com.gap.bis_inspection.db.dao.SurveyFormQuestionTempDao;

import java.util.List;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "SURVEY_FORM".
 */
public class SurveyForm {

    private Long id;
    private String name;
    private Integer minScore;
    private Integer maxScore;
    private java.util.Date startDate;
    private java.util.Date endDate;
    private Integer statusEn;
    private Integer formStatus;
    private java.util.Date statusDate;
    private Integer sendingStatusEn;
    private java.util.Date sendingStatusDate;
    private String xLatitude;
    private String yLongitude;
    private Long serverAnswerInfoId;
    private String inputValuesDefault;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient SurveyFormDao myDao;

    private List<SurveyFormQuestionTemp> surveyFormQuestionTempList;
    private List<SurveyFormQuestion> surveyFormQuestionList;

    public SurveyForm() {
    }

    public SurveyForm(Long id) {
        this.id = id;
    }

    public SurveyForm(Long id, String name, Integer minScore, Integer maxScore, java.util.Date startDate, java.util.Date endDate, Integer statusEn, Integer formStatus, java.util.Date statusDate, Integer sendingStatusEn, java.util.Date sendingStatusDate, String xLatitude, String yLongitude, Long serverAnswerInfoId, String inputValuesDefault) {
        this.id = id;
        this.name = name;
        this.minScore = minScore;
        this.maxScore = maxScore;
        this.startDate = startDate;
        this.endDate = endDate;
        this.statusEn = statusEn;
        this.formStatus = formStatus;
        this.statusDate = statusDate;
        this.sendingStatusEn = sendingStatusEn;
        this.sendingStatusDate = sendingStatusDate;
        this.xLatitude = xLatitude;
        this.yLongitude = yLongitude;
        this.serverAnswerInfoId = serverAnswerInfoId;
        this.inputValuesDefault = inputValuesDefault;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getSurveyFormDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getMinScore() {
        return minScore;
    }

    public void setMinScore(Integer minScore) {
        this.minScore = minScore;
    }

    public Integer getMaxScore() {
        return maxScore;
    }

    public void setMaxScore(Integer maxScore) {
        this.maxScore = maxScore;
    }

    public java.util.Date getStartDate() {
        return startDate;
    }

    public void setStartDate(java.util.Date startDate) {
        this.startDate = startDate;
    }

    public java.util.Date getEndDate() {
        return endDate;
    }

    public void setEndDate(java.util.Date endDate) {
        this.endDate = endDate;
    }

    public Integer getStatusEn() {
        return statusEn;
    }

    public void setStatusEn(Integer statusEn) {
        this.statusEn = statusEn;
    }

    public Integer getFormStatus() {
        return formStatus;
    }

    public void setFormStatus(Integer formStatus) {
        this.formStatus = formStatus;
    }

    public java.util.Date getStatusDate() {
        return statusDate;
    }

    public void setStatusDate(java.util.Date statusDate) {
        this.statusDate = statusDate;
    }

    public Integer getSendingStatusEn() {
        return sendingStatusEn;
    }

    public void setSendingStatusEn(Integer sendingStatusEn) {
        this.sendingStatusEn = sendingStatusEn;
    }

    public java.util.Date getSendingStatusDate() {
        return sendingStatusDate;
    }

    public void setSendingStatusDate(java.util.Date sendingStatusDate) {
        this.sendingStatusDate = sendingStatusDate;
    }

    public String getXLatitude() {
        return xLatitude;
    }

    public void setXLatitude(String xLatitude) {
        this.xLatitude = xLatitude;
    }

    public String getYLongitude() {
        return yLongitude;
    }

    public void setYLongitude(String yLongitude) {
        this.yLongitude = yLongitude;
    }

    public Long getServerAnswerInfoId() {
        return serverAnswerInfoId;
    }

    public void setServerAnswerInfoId(Long serverAnswerInfoId) {
        this.serverAnswerInfoId = serverAnswerInfoId;
    }

    public String getInputValuesDefault() {
        return inputValuesDefault;
    }

    public void setInputValuesDefault(String inputValuesDefault) {
        this.inputValuesDefault = inputValuesDefault;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<SurveyFormQuestionTemp> getSurveyFormQuestionTempList() {
        if (surveyFormQuestionTempList == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            SurveyFormQuestionTempDao targetDao = daoSession.getSurveyFormQuestionTempDao();
            List<SurveyFormQuestionTemp> surveyFormQuestionTempListNew = targetDao._querySurveyForm_SurveyFormQuestionTempList(id);
            synchronized (this) {
                if(surveyFormQuestionTempList == null) {
                    surveyFormQuestionTempList = surveyFormQuestionTempListNew;
                }
            }
        }
        return surveyFormQuestionTempList;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetSurveyFormQuestionTempList() {
        surveyFormQuestionTempList = null;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<SurveyFormQuestion> getSurveyFormQuestionList() {
        if (surveyFormQuestionList == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            SurveyFormQuestionDao targetDao = daoSession.getSurveyFormQuestionDao();
            List<SurveyFormQuestion> surveyFormQuestionListNew = targetDao._querySurveyForm_SurveyFormQuestionList(id);
            synchronized (this) {
                if(surveyFormQuestionList == null) {
                    surveyFormQuestionList = surveyFormQuestionListNew;
                }
            }
        }
        return surveyFormQuestionList;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetSurveyFormQuestionList() {
        surveyFormQuestionList = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
